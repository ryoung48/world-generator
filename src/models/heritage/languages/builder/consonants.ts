import { PhonemeCatalog } from '../types'
import { validTerms } from '.'

const orthography = (): Record<string, string> => {
  return {
    ŋ: 'ng',
    ð: 'th',
    ʃ: window.dice.weightedChoice([
      { v: 'sh', w: 0.9 },
      { v: 'x', w: 0.1 }
    ]),
    ʧ: window.dice.weightedChoice([
      { v: 'ch', w: 0.9 },
      { v: 'q', w: 0.1 }
    ]),
    ʒ: 'zh'
  }
}

const mapOrtho = (ortho: Record<string, string>, sounds: string[]) =>
  sounds.map(c =>
    c
      .split('')
      .map(l => ortho[l] || l)
      .join('')
  )

export const buildConsonants = (params: { ending: PhonemeCatalog; vowels: string[] }) => {
  const ortho = orthography()
  const k = window.dice.weightedChoice([
    { v: 'k', w: 0.4 },
    { v: 'c', w: 0.4 },
    { v: 'q', w: 0.2 }
  ])
  const j = window.dice.weightedChoice([
    { v: 'y', w: params.vowels.includes('y') ? 0 : 0.3 },
    { v: 'j', w: 0.7 }
  ])
  const essentials = ['n'].concat(window.dice.choice('rl'.split('')))
  const startConsonants = [
    ...essentials,
    ...window.dice.sample(`bdfgh${j + k + k}lmprsstvwxzŋðʃʧʒ`.split(''), 12)
  ]
  const middleConsonants = window.dice.sample(
    Array.from(new Set(startConsonants)).filter(c => c !== 'c'),
    6
  )
  const endConsonants = window.dice
    .sample(
      'cddfggjkkllmmnnpqrrsstŋŋxzzððʃʧ'.split('').filter(c => middleConsonants.includes(c)), // cSpell:ignore cddfggjkkllmmnnpqrrsstŋŋxzzððʃʧ
      4
    )
    .concat(essentials)
  const common = endConsonants.filter(c => 'lnrs'.includes(c))
  endConsonants.push(...common)
  middleConsonants.push(...common)
  const strict = middleConsonants.concat(endConsonants)
  const invalidLeads = ['c', 'ŋ']
  const lead = startConsonants.filter(c => !invalidLeads.includes(c))
  const mLead = window.dice.sample(
    validTerms(
      [
        'bh',
        'bj',
        'br',
        'br',
        'bw',
        'cv',
        'cz',
        'dh',
        'dh',
        'dh',
        'dr',
        'dr',
        'dz',
        'dw',
        'fh',
        'fj',
        'fr',
        'gh',
        'gr',
        'gw',
        'gw',
        'gx',
        'hj',
        'hl',
        'hm',
        'hr',
        'hw',
        'hv',
        'hz',
        'jh',
        'kh',
        'kh',
        'kh',
        'khm',
        'kj',
        'kr',
        'kw',
        'kx',
        'lh',
        'mh',
        'nz',
        'ph',
        'pr',
        'qh',
        'qr',
        'rh',
        'rw',
        'sk',
        'st',
        'str',
        'sv',
        'sw',
        'sz',
        'tr',
        'ts',
        'tw',
        'tz',
        'vh',
        'vr',
        'wr',
        'xh',
        'ym',
        'ys',
        'ysg',
        'ysgr',
        'zr',
        'zv',
        'zw',
        'ðr',
        'ʧr',
        ...(params.vowels.includes('u') ? [] : ['cl'])
      ],
      strict
    ),
    window.dice.randint(0, 3)
  )
  const mMid = validTerms(
    [
      'bj',
      'bl',
      'br',
      'cn',
      'cr',
      'cs',
      'cw',
      'cz',
      'dd',
      'ddh',
      'ddr',
      'dh',
      'dhr',
      'dj',
      'dl',
      'dr',
      'dr',
      'drr',
      'ds',
      'dv',
      'dw',
      'dx',
      'dz',
      'dð',
      'dʃ',
      'ff',
      'fg',
      'fj',
      'fn',
      'gf',
      'gg',
      'ggdr',
      'ggm',
      'ggr',
      'ggs',
      'ggʒ',
      'gh',
      'ghr',
      'gj',
      'gl',
      'gm',
      'gmm',
      'gn',
      'gq',
      'gr',
      'gs',
      'gv',
      'gw',
      'gx',
      'gz',
      'gʒ',
      'gð',
      'gʃ',
      'gʧ',
      'hj',
      'hk',
      'hl',
      'hm',
      'hn',
      'hnr',
      'hr',
      'hrj',
      'ht',
      'jh',
      'jm',
      'jn',
      'jr',
      'jð',
      'jʃ',
      'kd',
      'kdr',
      'kh',
      'khl',
      'khr',
      'kj',
      'kk',
      'kkh',
      'kkm',
      'kkr',
      'kl',
      'km',
      'kn',
      'kr',
      'ks',
      'kt',
      'kw',
      'kx',
      'kz',
      'kð',
      'kʃ',
      'lb',
      'lbr',
      'ld',
      'ld',
      'ld',
      'ldh',
      'ldm',
      'ldr',
      'ldr',
      'ldr',
      'ldw',
      'ldv',
      'ldz',
      'lf',
      'lg',
      'lgr',
      'lh',
      'lhg',
      'lj',
      'lk',
      'lkh',
      'll',
      'llm',
      'lm',
      'ln',
      'lr',
      'ls',
      'lt',
      'lv',
      'lw',
      'lx',
      'lz',
      'lʒ',
      'lð',
      'lʃ',
      'lʧ',
      'mb',
      'mbr',
      'md',
      'mdr',
      'mg',
      'mgr',
      'mh',
      'mj',
      'mk',
      'mm',
      'mr',
      'ms',
      'mv',
      'mx',
      'mz',
      'mð',
      'mʧ',
      'mʃ',
      'nb',
      'nbr',
      'nc',
      'nd',
      'nd',
      'ndh',
      'ndl',
      'ndm',
      'ndr',
      'ndr',
      'nf',
      'nh',
      'nj',
      'nk',
      'nkh',
      'nm',
      'nn',
      'nr',
      'ns',
      'nsk',
      'nst',
      'nstr',
      'nsw',
      'nt',
      'nw',
      'nv',
      'nx',
      'ny',
      'nz',
      'nʒ',
      'nð',
      'nðr',
      'nŋ',
      'nʃ',
      'nʧ',
      'qh',
      'qm',
      'qn',
      'qr',
      'qw',
      'qx',
      'qz',
      'qʒ',
      'qð',
      'qʃ',
      'rc',
      'rd',
      'rd',
      'rdr',
      'rdh',
      'rdl',
      'rg',
      'rh',
      'rj',
      'rk',
      'rkh',
      'rl',
      'rm',
      'rn',
      'rnh',
      'rph',
      'rq',
      'rr',
      'rs',
      'rsk',
      'rst',
      'rv',
      'rw',
      'rx',
      'rz',
      'rzb',
      'rʒ',
      'rzm',
      'rð',
      'rʃ',
      'rʧ',
      'sd',
      'sdr',
      'sf',
      'sg',
      'sgg',
      'sggr',
      'sk',
      'skh',
      'sl',
      'sm',
      'sr',
      'ss',
      'ssk',
      'ssm',
      'ssr',
      'st',
      'str',
      'str',
      'stv',
      'sv',
      'sw',
      'sx',
      'sz',
      'szk',
      'sʃ',
      'sʧ',
      'tl',
      'tr',
      'ts',
      'tt',
      'tz',
      'vd',
      'vf',
      'vg',
      'vh',
      'vj',
      'vn',
      'vr',
      'vs',
      'vsk',
      'vx',
      'vz',
      'vʒ',
      'wb',
      'wh',
      'wk',
      'wr',
      'xb',
      'xbr',
      'xd',
      'xdr',
      'xg',
      'xh',
      'xj',
      'xk',
      'xm',
      'xn',
      'xr',
      'xx',
      'xv',
      'xz',
      'xʒ',
      'xð',
      'xʃ',
      'zb',
      'zd',
      'zdr',
      'ʒn',
      'zgr',
      'zj',
      'zk',
      'zl',
      'zm',
      'zn',
      'zr',
      'zs',
      'zx',
      'zz',
      'zzm',
      'zð',
      'zʃ',
      'ðdr',
      'ðd',
      'ðg',
      'ðl',
      'ðm',
      'ðn',
      'ðr',
      'ðr',
      'ðx',
      'ðz',
      'ŋd',
      'ŋdr',
      'ŋg',
      'ŋgr',
      'ŋgw',
      'ŋh',
      'ŋj',
      'ŋk',
      'ŋm',
      'ŋn',
      'ŋr',
      'ŋs',
      'ŋsk',
      'ŋt',
      'ŋw',
      'ŋx',
      'ŋz',
      'ŋʒ',
      'ŋʃ',
      'ŋʧ',
      'ŋð',
      'ʃg',
      'ʃh',
      'ʃj',
      'ʃjr',
      'ʃk',
      'ʃm',
      'ʃn',
      'ʃr',
      'ʃt',
      'ʃw',
      'ʃx',
      'ʃz',
      'ʧb',
      'ʧn',
      'ʧr'
    ],
    strict
  )
  const dMid = validTerms(
    ['cc', 'dd', 'ff', 'gg', 'll', 'mm', 'nn', 'pp', 'rr', 'ss', 'tt', 'xx', 'zz'],
    strict
  )
  const complexMid =
    params.ending === PhonemeCatalog.MIDDLE_CONSONANT
      ? window.dice.sample(mMid, window.dice.randint(0, 12))
      : window.dice
          .sample(mMid, window.dice.randint(0, 2))
          .concat(window.dice.sample(dMid, window.dice.randint(0, 5)))
  const mEnd = window.dice.sample(
    validTerms(
      [
        'gg',
        'kk',
        'ld',
        'ld',
        'ld',
        'lf',
        'lf',
        'lt',
        'lm',
        'msk',
        'nc',
        'nd',
        'nd',
        'nj',
        'nk',
        'nsk',
        'nx',
        'nz',
        'nð',
        'ph',
        'rc',
        'rd',
        'rd',
        'rg',
        'rj',
        'rl',
        'rm',
        'rn',
        'rp',
        'rsk',
        'rx',
        'rz',
        'sk',
        'tl',
        'vsk',
        'wk',
        'ŋsk',
        'v',
        'xx',
        'zz',
        ...(params.vowels.includes('u') ? [] : ['nt'])
      ],
      strict
    ),
    window.dice.randint(0, 3)
  )
  return {
    consonantPhonemes: {
      [PhonemeCatalog.START_CONSONANT]: mapOrtho(ortho, [...lead, ...lead, ...mLead]),
      [PhonemeCatalog.MIDDLE_CONSONANT]: mapOrtho(ortho, [
        ...middleConsonants,
        ...middleConsonants,
        ...complexMid
      ]),
      [PhonemeCatalog.END_CONSONANT]: mapOrtho(ortho, [...endConsonants, ...endConsonants, ...mEnd])
    }
  }
}
